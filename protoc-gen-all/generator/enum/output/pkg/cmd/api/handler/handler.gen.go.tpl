// Code generated by proto-gen-spanner. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.
package preference

import (
	"context"

	"github.com/xhayamix/proto-gen-spanner/pkg/cerrors"
	"github.com/xhayamix/proto-gen-spanner/pkg/cmd/api/usecase/interactor/preference"
	"github.com/xhayamix/proto-gen-spanner/pkg/context/ccontext"
	"github.com/xhayamix/proto-gen-spanner/pkg/domain/enum"
	pb "github.com/xhayamix/proto-gen-spanner/pkg/domain/proto/client/api"
)

type handler struct {
	interactor preference.Interactor
}

func New(interactor preference.Interactor) pb.PreferenceServer {
	return &handler{interactor: interactor}
}

func (h *handler) Update(ctx context.Context, req *pb.PreferenceUpdateRequest) (*pb.PreferenceUpdateResponse, error) {
	cctx := ccontext.Extract(ctx)
	preferenceTypes := make(enum.PreferenceTypeSlice, 0, len(req.GetPreferenceTypes()))
	for _, typ := range req.GetPreferenceTypes() {
		preferenceTypes = append(preferenceTypes, enum.PreferenceType(typ))
	}

	if err := h.interactor.Update(ctx, cctx.GetUserID(), preferenceTypes, &preference.Preference{
		{{- range .Elements }}
		{{ .PascalName }}: {{ if .IsEnum }}{{ .Type }}(req.Get{{ .PascalName }}()){{ else }}req.Get{{ .PascalName }}(){{ end }},
		{{- end }}
	}); err != nil {
		return nil, cerrors.Stack(err)
	}
	return &pb.PreferenceUpdateResponse{}, nil
}
